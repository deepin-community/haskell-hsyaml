Description: support megaparsec >= 7.0.0
Origin: upstream, https://github.com/haskell-hvr/HsYAML/commit/41ac4b0
Bug: https://github.com/haskell-hvr/HsYAML/issues/34
Author: Felix C. Stegerman <flx@obfusk.net>
Forwarded: yes
Last-Update: 2020-04-08
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/HsYAML.cabal
+++ b/HsYAML.cabal
@@ -113,7 +113,7 @@
                  , containers
                  , mtl
                    -- non-inherited
-                 , megaparsec  >= 6.5.0 && < 6.6
+                 , megaparsec  == 7.0.*
                  , microaeson  == 0.1.*
                  , filepath    == 1.4.*
                  , directory   >= 1.2 && < 1.4
--- a/src-test/TML.hs
+++ b/src-test/TML.hs
@@ -40,12 +40,11 @@
 import           Text.Megaparsec
 import           Text.Megaparsec.Char
 import qualified Text.Megaparsec.Char.Lexer as L
-import           Text.Megaparsec.Expr
 
 type Parser = Parsec Void T.Text
 
 parse :: String -> T.Text -> Either T.Text Document
-parse fn raw = either (Left . T.pack . parseErrorPretty' raw)
+parse fn raw = either (Left . T.pack . errorBundlePretty)
                       (Right .process_pseudo)
                       (Text.Megaparsec.parse testml_document fn raw)
 
@@ -318,7 +317,7 @@
     block_definition = do
       -- block_heading
       string "===" *> ws
-      l <- T.pack <$> manyTill anyChar eol
+      l <- T.pack <$> manyTill anySingle eol
 
       -- TODO: user_defined
       ps <- many point_definition
@@ -333,7 +332,7 @@
 
       let single = do
             _ <- char ':' *> ws
-            x <- T.pack <$> manyTill anyChar eol
+            x <- T.pack <$> manyTill anySingle eol
             -- consume and ignore any point_lines
             _ <- point_lines
             pure $! case j of
@@ -358,7 +357,7 @@
 point_lines :: Parser T.Text
 point_lines = T.pack . unlines <$> go
   where
-    go = many (notFollowedBy point_boundary *> manyTill anyChar eol)
+    go = many (notFollowedBy point_boundary *> manyTill anySingle eol)
 
     point_boundary :: Parser ()
     point_boundary = void (string "---") <|> void (string "===") <|> eof
